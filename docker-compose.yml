version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: relatorios_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql        
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - relatorios_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: relatorios_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "15672:15672"
    networks:
      - relatorios_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: relatorios_app
    volumes:
      - ./app/public:/var/www/html/public
      - ./app/src:/var/www/html/src
    networks:
      - relatorios_network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: root
      DB_PASS: ${MYSQL_ROOT_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}

  consumer:
    build:
      context: ./app/consumer
      dockerfile: Dockerfile
    container_name: relatorios_consumer
    networks:
      - relatorios_network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: root
      DB_PASS: ${MYSQL_ROOT_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      MAILTRAP_HOST: ${MAILTRAP_HOST}
      MAILTRAP_PORT: ${MAILTRAP_PORT}
      MAILTRAP_USER: ${MAILTRAP_USER}
      MAILTRAP_PASS: ${MAILTRAP_PASS}
      EMAIL_TO: ${EMAIL_TO}
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: relatorios_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - relatorios_network
    depends_on:
      - app

networks:
  relatorios_network:
    driver: bridge

volumes:
  mysql_data: